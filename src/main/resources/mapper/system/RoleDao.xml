<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fish.system.dao.RoleDao">

    <!-- Role的映射结果集 -->
    <resultMap id="BaseResultMap" type="com.fish.system.domain.Role">
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_desc" jdbcType="VARCHAR" property="roleDesc"/>
        <result column="available" jdbcType="INTEGER" property="available"/>
    </resultMap>

    <!-- Role的所有字段 -->
    <sql id="allColumn">
        role_id,role_name,role_desc,available
    </sql>

    <!-- 查询所有角色信息 -->
    <select id="queryRoleInfo" resultMap="BaseResultMap">
        select
        <include refid="allColumn"/>
        from sys_role
        <where>
            <if test="roleName != null and roleName !=''">
                and role_name like concat("%",#{roleName},"%")
            </if>
            <if test="roleDesc != null and roleDesc !=''">
                and role_desc like concat("%",#{roleDesc},"%")
            </if>
            <if test="available != null">
                and available = #{available}
            </if>
            <if test="roleId != null">
                role_id = #{roleId}
            </if>
        </where>
    </select>

    <!-- 根据用户id查询用户所拥有的角色权限 -->
    <!--<select id="queryUserHasRoleByUserId" resultMap="BaseResultMap">
        SELECT t1.* FROM sys_role t1
        INNER JOIN sys_role_user t2
        ON t1.role_id = t2.role_id
        WHERE t2.user_id = #{userId}
    </select>-->

    <!-- 根据角色Id删除角色表和用户关联的中间表的信息 -->
    <delete id="deleteRoleAndUserByRid" parameterType="java.lang.Integer">
        delete
        from sys_role_user
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <!-- 根据角色Id删除角色表和菜单表关联的中间表的信息 -->
    <delete id="deleteRoleAndMenuByRid" parameterType="java.lang.Integer">
        delete
        from sys_role_menu
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <!-- 删除角色 -->
    <delete id="deleteRoleInfo" parameterType="java.lang.Integer">
        delete
        from sys_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <!-- 将给角色分配权限菜单的记录保存到中间表 -->
    <insert id="insertAssignMenuToRole">
        insert into sys_role_menu(role_id, menu_id)
        values (#{roleId}, #{mid})
    </insert>

    <!-- 通过ID查询角色信息 -->
    <select id="queryRoleByRoleId" resultMap="BaseResultMap">
        select
        <include refid="allColumn"/>
        from sys_role
        <where>
            <if test="roleId != null">
                role_id = #{roleId}
            </if>
        </where>
    </select>

    <!-- 根据用户id查询用户所拥有的角色权限 -->
    <select id="queryUserHasRoleByUserId" resultMap="BaseResultMap">
        SELECT t1.*
        FROM sys_role t1
        INNER JOIN sys_role_user t2
        ON t1.role_id = t2.role_id
        WHERE t2.user_id = #{userId}
    </select>

    <!-- 添加角色 -->
    <insert id="addRoleData" parameterType="com.fish.system.domain.Role">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDesc != null">
                role_desc,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <!-- 修改角色 -->
    <update id="updateRoleData" parameterType="com.fish.system.domain.Role">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>


</mapper>
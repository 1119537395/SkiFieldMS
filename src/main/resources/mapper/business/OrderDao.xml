<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fish.business.dao.OrderDao">
    <!-- 实体字段映射 -->
    <resultMap id="BaseResultMap" type="com.fish.business.domain.Order">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="tourist_id" jdbcType="INTEGER" property="touristId"/>
        <result column="field_id" jdbcType="INTEGER" property="fieldId"/>
        <result column="buy_ticket_number" jdbcType="INTEGER" property="buyTicketNumber"/>
        <result column="payment_amount" jdbcType="DECIMAL" property="paymentAmount"/>
        <result column="order_info" property="orderInfo"/>
        <result column="order_state" property="orderState"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="tourist_name" property="touristName"/>
        <result column="tourist_phone" property="touristPhone"/>
        <result column="field_road" property="fieldRoad"/>
        <result column="field_price" property="fieldPrice"/>
        <result column="user_name" property="createUserName"/>
    </resultMap>

    <sql id="Base_Column_List">
        order_id, tourist_id, field_id, buy_ticket_number, payment_amount,order_info,order_state,create_time, create_user_id
    </sql>

    <!-- 关联表查询 -->
    <sql id="allColumn">
        SELECT order_id,
               o1.tourist_id,
               o1.field_id,
               buy_ticket_number,
               payment_amount,
               order_info,
               order_state,
               o1.create_time,
               o1.create_user_id,
               t1.tourist_name  as tourist_name,
               t1.tourist_phone as tourist_phone,
               f1.field_road    as field_road,
               f1.field_price   as field_price,
               u1.user_name     as user_name
        FROM ski_order o1
                 LEFT JOIN ski_tourist t1
                           ON o1.tourist_id = t1.tourist_id
                 LEFT JOIN ski_field f1
                           ON o1.field_id = f1.field_id
                 LEFT JOIN sys_user u1
                           ON o1.create_user_id = u1.user_id
    </sql>


    <!-- 查询订单信息 -->
    <select id="selectOrderInfoByList" parameterType="com.fish.business.domain.Order" resultMap="BaseResultMap">
        <include refid="allColumn"/>
        <where>
            <if test="orderId != null">
                and order_id like concat("%",#{orderId},"%")
            </if>
            <if test="touristId != null">
                and o1.tourist_id = #{touristId}
            </if>
            <if test="paymentAmount != null">
                and payment_amount like concat("%",#{paymentAmount},"%")
            </if>
        </where>
        order by create_time desc
    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ski_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from ski_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.fish.business.domain.Order">
        insert into ski_order (order_id, tourist_id, field_id,
                               buy_ticket_number, payment_amount, order_info, create_time,
                               create_user_id)
        values (#{orderId,jdbcType=VARCHAR}, #{touristId,jdbcType=INTEGER}, #{fieldId,jdbcType=INTEGER},
                #{buyTicketNumber,jdbcType=INTEGER}, #{paymentAmount,jdbcType=DECIMAL}, #{order_info},
                #{createTime,jdbcType=TIMESTAMP},
                #{createUserId,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.fish.business.domain.Order">
        insert into ski_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="touristId != null">
                tourist_id,
            </if>
            <if test="fieldId != null">
                field_id,
            </if>
            <if test="buyTicketNumber != null">
                buy_ticket_number,
            </if>
            <if test="paymentAmount != null">
                payment_amount,
            </if>
            <if test="orderInfo !=null">
                order_info,
            </if>
            <if test="orderState != null">
                order_state,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="touristId != null">
                #{touristId,jdbcType=INTEGER},
            </if>
            <if test="fieldId != null">
                #{fieldId,jdbcType=INTEGER},
            </if>
            <if test="buyTicketNumber != null">
                #{buyTicketNumber,jdbcType=INTEGER},
            </if>
            <if test="paymentAmount != null">
                #{paymentAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderInfo != null">
                #{orderInfo},
            </if>
            <if test="orderState != null">
                #{orderState},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.fish.business.domain.Order">
        update ski_order
        <set>
            <if test="touristId != null">
                tourist_id = #{touristId,jdbcType=INTEGER},
            </if>
            <if test="fieldId != null">
                field_id = #{fieldId,jdbcType=INTEGER},
            </if>
            <if test="buyTicketNumber != null">
                buy_ticket_number = #{buyTicketNumber,jdbcType=INTEGER},
            </if>
            <if test="paymentAmount != null">
                payment_amount = #{paymentAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderInfo != null">
                order_info = #{orderInfo},
            </if>
            <if test="orderState != null">
                order_state = #{orderState},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=INTEGER},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.fish.business.domain.Order">
        update ski_order
        set tourist_id        = #{touristId,jdbcType=INTEGER},
            field_id          = #{fieldId,jdbcType=INTEGER},
            buy_ticket_number = #{buyTicketNumber,jdbcType=INTEGER},
            payment_amount    = #{paymentAmount,jdbcType=DECIMAL},
            create_time       = #{createTime,jdbcType=TIMESTAMP},
            create_user_id    = #{createUserId,jdbcType=INTEGER}
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
</mapper>